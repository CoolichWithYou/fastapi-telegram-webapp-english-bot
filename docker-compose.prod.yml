version: '3.8'

services:
  bot:
    build: ./bot
    container_name: reword_bot
    depends_on:
      - db
    volumes:
      - ./bot:/app
    networks:
      - app-network
    environment:
      TOKEN: ${TOKEN}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}

  fastapi:
    build: ./server
    container_name: reword_server
    depends_on:
      - db
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}

  db:
    image: postgres:15
    restart: always
    container_name: reword_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app-network

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    container_name: react_frontend
    ports:
      - "3001:3000"
    volumes:
      - ./front:/app
    depends_on:
      - fastapi
    networks:
      - app-network

  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - fastapi
      - frontend
    volumes:
      - ./front/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem:ro
      - ./nginx/key.pem:/etc/key.pem:ro
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  celery_worker:
    build:
      context: notifications
      dockerfile: Dockerfile
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - redis
      - fastapi
      - rabbitmq
    networks:
      - app-network

  celery_beat:
    build:
      context: notifications
      dockerfile: Dockerfile
    command: celery -A celery_app beat --loglevel=info
    depends_on:
      - redis
      - fastapi
      - rabbitmq
    networks:
      - app-network

  certbot:
    build:
      context: ./certbot
      dockerfile: Dockerfile
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}
    ports:
      - "6000:80"
    volumes:
      - ./nginx-debug/:/etc/nginx/


volumes:
  static_volume:
  pgdata:
  rabbitmq:
  media_data:

networks:
  app-network:
