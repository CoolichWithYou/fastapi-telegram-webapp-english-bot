name: CI

on:
  push:
    branches:
      - develop
    tags:
      - 'v'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      TOKEN: ${{ secrets.TOKEN }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      CHUNK_SIZE: ${{ secrets.CHUNK_SIZE }}
      RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_DEFAULT_USER }}
      RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_DEFAULT_PASS }}
      DOMAIN_EMAIL: ${{ secrets.DOMAIN_EMAIL }}
      DOMAIN_URL: ${{ secrets.DOMAIN_URL }}


    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      - name: compose up
        run: docker-compose -f docker-compose.prod.yml up --build bot fastapi db

      - name: wait db launch
        run: |
          echo "Waiting for PostgreSQL..."
          until docker exec reword_db pg_isready -U $POSTGRES_USER; do
            sleep 2
          done

      - name: Apply migrations
        run: docker exec reword_server /bin/bash -c "cd ../ && alembic -c /server/alembic.ini upgrade head"